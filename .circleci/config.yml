# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
    aws-cli: circleci/aws-cli@1.0.0
executors:
  main-env:
    docker:
      - image: firesim/firesim-ci:v1.1
        user: "centos"
    environment:
        JVM_MEMORY: 3500M # Default JVM maximum heap limit
        LANG: en_US.UTF-8 # required by sbt when it sees boost directories
  aws:
    docker:
    - image: cimg/python:2.7-node

commands:
  machinelaunchscript:
    description: "Run firesim's machine launch script"
    steps:
      - run:
          command: |
            cd scripts && /usr/bin/bash ./machine-launch-script.sh

  install-fabric:
    description: "Installs fabric for manager-managing CI container"
    steps:
      - run:
          command: |
            pip install fabric==1.14.0
            pip install boto3==1.6.2

  buildsetup:
    description: "Run firesim's build-setup.sh"
    steps:
      - run:
          command: |
            ./build-setup.sh fast

  scala-build:
    description: "Compile all relevant Scala sources for CI"
    steps:
      - run:
          command: |
            source env.sh
            make -C sim TARGET_PROJECT=midasexamples sbt SBT_COMMAND=test:compile

  build-scala-doc:
    description: "Compiles Scala Doc"
    steps:
      - run:
          command: |
            source env.sh
            make -C sim scaladoc

  run-manager-pytest:
    description: "Runs all manager pytests"
    steps:
      - run:
          command: |
            source env.sh
            cd deploy && python -m pytest

  push-scaladoc-to-ghpages:
    description: "Pushes scaladoc to ghphage branch"
    steps:
      - run:
          command: |
            git config --global user.email "biancolin@berkeley.edu"
            git config --global user.name "circleci"
      - when:
          condition: << pipeline.git.tag >>
          steps:
          - run:
              command: |
                source env.sh
                export SBT_GHPAGES_COMMIT_MESSAGE="[ci skip] Update scaladoc for << pipeline.git.tag >> release"
                make -C sim TARGET_PROJECT=midasexamples sbt SBT_COMMAND='set apiDirectory := \"<< pipeline.git.tag >>\"; ghpagesPushSite'
      - unless:
          condition: << pipeline.git.tag >>
          steps:
          - run:
              command: |
                source env.sh
                export SBT_GHPAGES_COMMIT_MESSAGE="[ci skip] Update scaladoc for dev:<< pipeline.git.revision >>"
                make -C sim TARGET_PROJECT=midasexamples sbt SBT_COMMAND="ghpagesPushSite"

  run-scala-test:
    description: "Runs the scala test with name <test-package>.<test-name>"
    parameters:
      target-project:
        type: string
        default: "midasexamples"
      test-name:
        type: string
      test-package:
        type: string
        default: "firesim.midasexamples"
      timeout:
        type: string
        default: "120m"
    steps:
      - run:
          command: |
              .circleci/run-scala-test.py << parameters.target-project >> << parameters.test-package >>.<< parameters.test-name >>
          no_output_timeout: << parameters.timeout >>

  initialize-manager:
    description: "Setups the manager instance and firesim repo"
    parameters:
      max-runtime-seconds:
        type: integer
      filesystem-timeout-seconds:
        type: integer
    steps:
      - run:
          command: |
              .circleci/initialize-manager.py  << parameters.max-runtime-seconds >> << parameters.filesystem-timeout-seconds >>

  repo-setup:
    description: "Runs all baseline setup tasks up to scala compilation."
    steps:
      - checkout
      - machinelaunchscript
      - buildsetup
      - scala-build

jobs:
  run-test-groupA:
    executor: aws
    steps:
      - checkout
      - aws-cli/setup
      - install-fabric
      - run-scala-test:
          test-name: "CIGroupA"

  run-test-groupB:
    executor: aws
    steps:
      - checkout
      - aws-cli/setup
      - install-fabric
      - run-scala-test:
          test-name: "CIGroupB"

  publish-scala-doc:
    executor: main-env
    steps:
      - repo-setup
      - build-scala-doc
      - push-scaladoc-to-ghpages

  setup-default-manager:
      executor: aws
      environment:
          TERM: xterm-256color
      steps:
          - checkout
          - aws-cli/setup
          - install-fabric
          - run:
              name: Initialize FireSim manager
              command: |
                  .circleci/launch-manager-instance.py
          - initialize-manager:
              max-runtime-seconds: 3600
              filesystem-timeout-seconds: 600

workflows:
   version: 2

   firesimCIall:
     jobs:
      - setup-default-manager

      - run-test-groupA:
          requires:
          - setup-default-manager

      - run-test-groupB:
          requires:
          - setup-default-manager

      - publish-scala-doc:
          filters:
            branches:
              only:
                - dev
            tags:
              only:
                - /[0-9]*\.[0-9]*\.[0-9]*/

